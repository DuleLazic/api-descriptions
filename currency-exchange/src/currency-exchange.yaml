swagger: '2.0'
host: api.asee.co
basePath: /currency-exchange
info:
  description: |
    Currency Exchange API gives you possibility to execute, track, query orders for exchange or conversion of foreign currency.
    With Currency Exchange API you can:
      - Get rates on the day.
      - Get rates history for chosen time interval.
      - List transactions that occured and filter them by some criteria.
      - Get details about particular transactions.
      - Realize exchange transaction.
  title: Currency Exchange API
  version: beta
tags:
  - description: Working with classifications
    name: Classifications
  - description: Working with rates
    name: Rates
  - description: Working with transactions
    name: Transactions
  - description: Working with offers
    name: Offers
consumes:
  - application/json
produces:
  - application/json
paths:
  '/classifications/{schema-id}':
    get:
      operationId: Classifications_Get
      parameters:
        - $ref: '#/parameters/schema-id-param'
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/classification-value'
            type: array
        default:
          $ref: '#/responses/default-error-response'
      summary: Get classification values.
      tags:
        - Classifications
      x-asee-tags: []
  '/rates/{date-for}':
    get:
      description: It is useful if data about rates on specific day are required.
      operationId: Rates_Get
      parameters:
        - $ref: '#/parameters/date-for-param'
        - $ref: '#/parameters/currency-codes-param'
        - $ref: '#/parameters/best-rate-param'
        - $ref: '#/parameters/customer-id-param'
        - $ref: '#/parameters/page-size-param'
        - $ref: '#/parameters/page-param'
        - $ref: '#/parameters/sort-order-param'
        - $ref: '#/parameters/sort-by-param'
        - $ref: '#/parameters/include-param'
        - $ref: '#/parameters/trim-param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/rates'
        default:
          $ref: '#/responses/default-error-response'
      summary: Get exchange rates for specific day. Shows all exchange rates for chosen date.
      tags:
        - Rates
      x-asee-tags:
        - Pageable
        - Sortable
        - Shapeable
  /rates/history:
    get:
      description: It is useful when is required to track changes of rates in some time interval.
      operationId: Rates_GetHistory
      parameters:
        - $ref: '#/parameters/sampling-param'
        - $ref: '#/parameters/date-from-param'
        - $ref: '#/parameters/date-to-param'
        - $ref: '#/parameters/currency-codes-param'
        - $ref: '#/parameters/page-size-param'
        - $ref: '#/parameters/page-param'
        - $ref: '#/parameters/sort-order-param'
        - $ref: '#/parameters/sort-by-param'
        - $ref: '#/parameters/include-param'
        - $ref: '#/parameters/trim-param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/rates-history'
        default:
          $ref: '#/responses/default-error-response'
      summary: Get exchange rates for period. List of all rates for chosen time interval.
      tags:
        - Rates
      x-asee-tags:
        - Pageable
        - Sortable
        - Shapeable
  /offers:
    post:
      description: It is part of currency exchange process. It is also related to specific transaction that is occurring.
      operationId: Offers_Create
      parameters:
        - description: Currency exchange offer parameters.
          in: body
          name: cmd
          required: true
          schema:
            $ref: '#/definitions/create-offer-command'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/offer'
        '400':
          description: |
            Your request was well constructed but it does not comply with business policy. Consider the following possible problems and look into response for more details: 
            - [negative-amount] ()
          schema:
            $ref: '#/definitions/validation-problem'
        '440':
          description: |
            Your request was well constructed but it does not comply with business policy. Consider the following possible problems and look into response for more details: 
            - [temporary-unavailable]()
            - [night-exchange-closed]()
          schema:
            $ref: '#/definitions/business-problem'
        default:
          $ref: '#/responses/default-error-response'
      summary: Generate new currency exchange offer.
      tags:
        - Offers
      x-asee-tags: []
  /transactions:
    get:
      description: |
        Shows all transactions related to currencies exchanges from one account to all others.
        It is useful when it is required to view this kind of transactions for chosen time interval.
      operationId: Transactions_GetList
      parameters:
        - $ref: '#/parameters/status-param'
        - $ref: '#/parameters/date-from-param'
        - $ref: '#/parameters/date-to-param'
        - $ref: '#/parameters/amount-from-param'
        - $ref: '#/parameters/amount-to-param'
        - $ref: '#/parameters/value-date-from-param'
        - $ref: '#/parameters/value-date-to-param'
        - $ref: '#/parameters/purchased-currencies-param'
        - $ref: '#/parameters/source-currencies-param'
        - $ref: '#/parameters/source-account-number-param'
        - $ref: '#/parameters/direction-param'
        - $ref: '#/parameters/page-size-param'
        - $ref: '#/parameters/page-param'
        - $ref: '#/parameters/sort-order-param'
        - $ref: '#/parameters/sort-by-param'
        - $ref: '#/parameters/include-param'
        - $ref: '#/parameters/trim-param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/transaction-list'
        default:
          $ref: '#/responses/default-error-response'
      summary: Query currency exchange transaction list.
      tags:
        - Transactions
      x-asee-tags:
        - Pageable
        - Sortable
        - Shapeable
    post:
      description: It is step in process of executing currency echange transaction.
      operationId: Transactions_Initiate
      parameters:
        - description: Initiate currency exchange transaction command parameters.
          in: body
          name: cmd
          required: true
          schema:
            $ref: '#/definitions/initiate-transaction-command'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/command-result'
        '400':
          description: |
            Your request was well constructed but it does not comply with business policy. Consider the following possible problems and look into response for more details: 
            - [negative-amount] ()
          schema:
            $ref: '#/definitions/validation-problem'
        '440':
          description: |
            Your request was well constructed but it does not comply with business policy. Consider the following possible problems and look into response for more details: 
            - [source-account-check-failed]()
            - [destination-account-check-failed]()
            - [amount-limit-exceeded]()
            - [account-type-not-appropriate]()
            - [insufficient-balance]()
            - [frequency-limit-exceeded]()
            - [temporary-unavailable]()
            - [night-exchange-closed]()
          schema:
            $ref: '#/definitions/business-problem'
        default:
          $ref: '#/responses/default-error-response'
      summary: 'Initiate new currency exchange transaction. '
      tags:
        - Transactions
      x-asee-tags: []
  '/transactions/{transaction-id}':
    get:
      description: |
        Shows all available details for customer about one chosen transaction.
        It is useful when more details is required to be seen.
      operationId: Transactions_Get
      parameters:
        - $ref: '#/parameters/transaction-id-param'
        - $ref: '#/parameters/include-param'
        - $ref: '#/parameters/trim-param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/transaction'
        default:
          $ref: '#/responses/default-error-response'
      summary: Get currency exchange transaction details.
      tags:
        - Transactions
      x-asee-tags:
        - Shapeable
  /transactions/validate:
    post:
      description: |
        Check all necesery validations and buisenss policy rules, before execute transaction. If some rule
        is violated, transaction is canceled with info about occured problem.
      operationId: Transactions_Validate
      parameters:
        - description: Validate currency exchange transaction command.
          in: body
          name: cmd
          required: true
          schema:
            $ref: '#/definitions/validate-transaction-command'
      responses:
        '204':
          description: No content
        '400':
          description: |
            Your request was well constructed but it does not comply with business policy. Consider the following possible problems and look into response for more details: 
            - [negative-amount] ()
          schema:
            $ref: '#/definitions/validation-problem'
        '440':
          description: |
            Your request was well constructed but it does not comply with business policy. Consider the following possible problems and look into response for more details: 
            - [source-account-check-failed]()
            - [destination-account-check-failed]()
            - [amount-limit-exceeded]()
            - [account-type-not-appropriate]()
            - [insufficient-balance]()
            - [frequency-limit-exceeded]()
            - [temporary-unavailable]()
            - [night-exchange-closed]()
          schema:
            $ref: '#/definitions/business-problem'
        default:
          $ref: '#/responses/default-error-response'
      summary: Validate currency exchange transaction.
      tags:
        - Transactions
      x-asee-tags: []
parameters:
  schema-id-param:
    description: Unique classification identifier
    in: path
    name: schema-id
    required: true
    type: string
  date-for-param:
    description: Date for which data is queried.
    in: path
    name: date-for
    required: true
    type: string
  currency-codes-param:
    description: |
      Currency codes that determine currencies. Currency codes are part of items in list of available currencies. 
      For a complete list of possible values see [Currencies]() classification.
    in: query
    name: currency-codes
    required: false
    collectionFormat: csv
    items:
      type: string
    type: array
  best-rate-param:
    description: Best rate for exchange.
    in: query
    name: best-rate
    required: false
    format: int32
    type: integer
  customer-id-param:
    description: Unique customer identifier.
    in: query
    name: customer-id
    required: false
    type: string
  page-size-param:
    description: 'Number of items on a page. For more information see general guidance on [paging and sorting]().'
    in: query
    name: page-size
    required: false
    format: int32
    type: integer
  page-param:
    description: 'Page index. For more information see general guidance on [paging and sorting]().'
    in: query
    name: page
    required: false
    format: int32
    type: integer
  sort-order-param:
    description: 'Sort order (`asc` or `desc`). Default is asc. For more information see general guidance on [paging and sorting]()'
    in: query
    name: sort-order
    required: false
    enum:
      - asc
      - desc
    type: string
  sort-by-param:
    description: 'Attribute of the collection item to sort by. For more information see general guidance on [paging and sorting]().'
    in: query
    name: sort-by
    required: false
    type: string
  include-param:
    description: 'List of fields to include in response. For more information see general guidance on [response shaping]()'
    in: query
    name: include
    required: false
    collectionFormat: csv
    items:
      type: string
    type: array
  trim-param:
    description: 'List of fields to trim from response. For more information see general guidance on [response shaping]()'
    in: query
    name: trim
    required: false
    collectionFormat: csv
    items:
      type: string
    type: array
  sampling-param:
    description: Sampling. TO DO Description.
    in: query
    name: sampling
    required: false
    format: int32
    type: integer
  date-from-param:
    description: Date from which some data are queried.
    in: query
    name: date-from
    required: true
    format: date-time
    type: string
  date-to-param:
    description: Date to which some data are queried.
    in: query
    name: date-to
    required: true
    format: date-time
    type: string
  status-param:
    description: Parameter that provides filter based on transaction status.
    in: query
    name: status
    required: false
    collectionFormat: csv
    enum:
      - all-transactions
      - executed-transactions
      - archived-transactions
      - draft-transactions
    items:
      type: string
    type: array
  amount-from-param:
    description: Lower limit for amounts that will be included in the result.
    in: query
    name: amount-from
    required: false
    format: double
    type: number
  amount-to-param:
    description: Top limit for amounts that will be included in the result.
    in: query
    name: amount-to
    required: false
    format: double
    type: number
  value-date-from-param:
    description: Date from which dates will be included in the result.
    in: query
    name: value-date-from
    required: false
    format: date-time
    type: string
  value-date-to-param:
    description: Date to which dates will be included in the result.
    in: query
    name: value-date-to
    required: false
    format: date-time
    type: string
  purchased-currencies-param:
    description: Currencies that have been purchased.
    in: query
    name: purchased-currencies
    required: false
    collectionFormat: csv
    items:
      type: string
    type: array
  source-currencies-param:
    description: Currencies from which exchanges have been done.
    in: query
    name: source-currencies
    required: false
    collectionFormat: csv
    items:
      type: string
    type: array
  source-account-number-param:
    description: Source account unique identifier.
    in: query
    name: source-account-number
    required: false
    type: string
  direction-param:
    description: Direction of currency exchange.
    in: query
    name: direction
    required: false
    type: string
  transaction-id-param:
    description: Transaction unique identifier.
    in: path
    name: transaction-id
    required: true
    type: string
definitions:
  classification-value:
    description: Single item of classification.
    example:
      code: 00001
      literal: EUR
      description: European Dollar
      id: 1 
      parent-id: 5
      ordinal: 1
    properties:
      code:
        description: Code of classification value.
        type: string
      literal:
        description: Short name for classification value.
        type: string
      description:
        description: Description of classification value.
        type: string
      id:
        description: Unique identifier of classification value.
        type: string
      parent-id:
        description: Unique identifier of parent classification value.
        type: string
      ordinal:
        description: Ordinal of classification value.
        type: string
    type: object   
  rates:
    description: Exchange rates for particular day.
    example:
      date-created: '2015-11-09T00:00:00'
      list-type: ''
      rate-number: 80077
      total-count: 5
      page-size: 10
      page-number: 1
      total-pages: 0
      sort-order: desc
      sort-by: date-created
    allOf: 
    - $ref: '#/definitions/paged-list'  
    properties:
      date-created:
        description: Date created.
        format: date-time
        type: string
      list-type:
        description: |
          The type of exchange rate list. 
          Classification explaining what type of list will be displayed. For a complete list of possible values see [exchange-rates-types]() classification.
        type: string
      rate-number:
        description: Order number of exchange rate list for the day.
        format: int32
        type: integer
      rates:
        description: List of currency exchange rates.
        items:
          $ref: '#/definitions/rate'
        type: array
    type: object
  rate:
    description: |
      Currency exchange rate contains details about one foreign and local currency rates. This includes info such as
      buy, sell and middle rate.
    example:
      buy: 0
      buy-cash: 0
      country-code: SRB
      country-name: Serbia
      currency-code: EUR
      for-local: 0
      max-sell-cash: 0
      middle: 0
      rate: 0
      sell: 0
      sell-cash: 0
    properties:
      buy:
        description: Buy amount
        format: double
        type: number
      buy-cash:
        description: Buy amount for cash
        format: double
        type: number
      country-code:
        description: Country code.
        type: string
      country-name:
        description: Country name.
        type: string
      currency-code:
        description: Currency code.
        type: string
      for-local:
        description: Amount for local.
        format: int32
        type: integer
      max-sell-cash:
        description: Maximum sell cash amount.
        format: double
        type: number
      middle:
        description: Middle amount.
        format: double
        type: number
      rate:
        description: Rate for currencies exchange.
        format: double
        type: number
      sell:
        description: Sell amount.
        format: double
        type: number
      sell-cash:
        description: Sell cash amount.
        format: double
        type: number
    type: object
  rates-history:
    description: Currency exchange rates history shows list of currency exchange rates for chosen period of time.
    example:
      total-count: 886
      page-size: 10
      page-number: 0
      total-pages: 0
      sort-order:
      sort-by:
    allOf: 
    - $ref: '#/definitions/paged-list'  
    properties:
      list-type:
        description: |
          The type of exchange rate list. 
          Classification explaining what type of list will be displayed. For a complete list of possible values see [exchange-rates-types]() classification.
        type: string
      rates:
        description: List of currency exchange rates.
        items:
          $ref: '#/definitions/rates'
        type: array
    type: object
  create-offer-command:
    description: Currency exchange parameters for which an offer will be calculated and displayed.
    example:
      source-account-number: 115-0000000050378-56
      destination-account-number: 115-1000100019578-10
      currency:
        code: EUR
        amount: 100
        direction: purchase
    properties:
      source-account-number:
        description: Source account number.
        type: string
      destination-account-number:
        description: Destination account number.
        type: string
      currency:
        description: Currency amount.
        $ref: '#/definitions/currency'
      direction:
        description: Direction.
        enum:
          - purchase
          - sell
        type: string
    type: object
  currency:
    description: Currency amount and code.
    example:
      code: EUR
      amount: 200
    properties:
      code:
        description: Code of currency.
        type: string
      amount:
        description: Amount.
        format: double
        type: number
    type: object
  offer:
    description: Currency exchange offer shows details about particular transaction which is about to be realised.
    example:
      charge-amount:
        code: RSD
        amount: 11.59
      rate: 115.7505
      free-transactions: 0
      local-amount: 1157.51
      offer-id: 463
      rate-for-rest: 0
      offer-id-for-rest: 0
      remaining-limit: 0
    properties:
      charge-amount:
        description: Charge amount
        $ref: '#/definitions/currency'
      rate:
        description: Exchange rate
        format: double
        type: number
      free-transactions:
        description: Number of free transactions
        format: int32
        type: integer
      local-amount:
        description: Exchange local amount
        format: double
        type: number
      offer-id:
        description: Offer identifier
        format: int32
        type: integer
      rate-for-rest:
        description: Rate for the rest
        format: double
        type: number
      offer-id-for-rest:
        description: Offer identifier for the rest
        format: int32
        type: integer
      remaining-limit:
        description: Remaining limit amount
        format: double
        type: number
    type: object
  transaction-list:
    description: List of currency exchange transactions.
    example:
      total-count: 20
      page-size: 10
      page-number: 1
      total-pages: 3
      sort-order:
      sort-by:
    allOf: 
    - $ref: '#/definitions/paged-list'  
    properties:
      transactions:
        description: Transactions list.
        items:
          $ref: '#/definitions/transaction'
        type: array
    type: object
  transaction:
    description: Details of currency exchange transaction.
    example:
      source-account: 115-0000000050378-56
      destination-account: 115-1000100019578-10
      currency:
        code: EUR
        amount: 100
      client-id: '1402679'
      status:
        code: executed
        description: transaction executed
        effective-date: '2015-11-09T10:51:05'
      value-date: '2015-11-09T10:51:05'
      posted-date: '2015-11-09T10:51:05'
      executed-date: '2015-11-09T10:51:05'
      transaction-id: '99900155236001'
      direction: purchase
      has-picture: false
      category: ''
      geolocation:
        lat: ''
        lon: ''
        mapped-address: ''
    properties:
      source-account:
        description: Source account.
        type: string
      destination-account:
        description: Destination account.
        type: string
      currency:
        description: Currency amount.
        $ref: '#/definitions/currency'
      client-id:
        description: Client identifier.
        type: string
      status:
        description: Transaction status.
        $ref: '#/definitions/status'
      value-date:
        description: Value date.
        format: date-time
        type: string
      posted-date:
        description: Posted date.
        format: date-time
        type: string
      executed-date:
        description: Executed date.
        format: date-time
        type: string
      transaction-id:
        description: Transaction identifier.
        type: string
      direction:
        description: Direction.
        enum:
          - purchase
          - sell
        type: string
      picture:
        description: Transaction picture.
        type: string
      has-picture:
        description: Indicator for transaction picture
        type: boolean
      category:
        description: Category
        type: string
      geolocation:
        description: Geolocation.
        $ref: '#/definitions/geolocation'
    required:
      - value-date
    type: object
  status:
    description: Currency exchange status, description and date.
    example:
      code: 123
      description: Status of the currency exchange.
      effective-date: '0001-01-01T00:00:00'
    properties:
      code:
        description: Status code.
        type: string
      description:
        description: Status description.
        type: string
      effective-date:
        description: Effective date.
        format: date-time
        type: string
    type: object
  geolocation:
    description: 'Geolocation details - Latitude, Longitude, Mapped address'
    example:
      lat: 44° 48' N
      lon: 20° 27' E 
      mapped-address: 'Main Boulevard 110, Belgrade, Serbia.'
    properties:
      lat:
        description: Geolocation latitude
        type: string
      lon:
        description: Geolocation longitude
        type: string
      mapped-address:
        description: Mapped address from GPS coordinates
        type: string
    type: object
  initiate-transaction-command:
    description: Command for initiating currency-exchange transaction
    example:
      source-account-number: 115-1000100019578-10
      destination-account-number: 115-0000000050378-56
      currency:
        code: 'EUR'
        amount: 100
      value-date: '0001-01-01T00:00:00'
      contact-person:
        first-name: ''
        last-name: ''
        email: ''
        fax-number: ''
        phone-number: ''
      direction: sell
      category: Additional expenses.
      geolocation:
        lat: ''
        lon: ''
        mapped-address: ''
      offer-id: 0
      transaction-id: '99900234567001'
    properties:
      source-account-number:
        description: Source account number.
        type: string
      destination-account-number:
        description: Destination account number.
        type: string
      currency:
        description: Currency amount.
        $ref: '#/definitions/currency'
      value-date:
        description: Value date.
        format: date-time
        type: string
      contact-person:
        description: Contact person details.
        $ref: '#/definitions/contact-person'
      direction:
        description: Direction.
        enum:
          - purchase
          - sell
        type: string
      category:
        description: Category
        type: string
      picture:
        description: Picture
        type: string
      geolocation:
        description: Geolocation details
        $ref: '#/definitions/geolocation'
      offer-id:
        description: Offer identifier.
        format: int32
        type: integer
      transaction-id:
        description: Transaction identifier.
        type: string
    type: object
  contact-person:
    description: Contact person details.
    example:
      first-name: Nickolas
      last-name: Navaras
      email: n.navaras@gmail.com
      fax-number: +381/11 123-1234
      phone-number: +381/11 123-1234
    properties:
      first-name:
        description: First name.
        type: string
      last-name:
        description: Last name.
        type: string
      email:
        description: Email.
        type: string
      fax-number:
        description: Fax.
        type: string
      phone-number:
        description: Phone number.
        type: string
    type: object
  command-result:
    description: Object that is returned when operation is regularly performed. Consists of unique identifier and status of called transaction.
    example:
      id: '99900155242001'
      created-record-status: 'executed'
    properties:
      id:
        description: Unique identifier for each particular called transaction.
        type: string
      created-record-status:
        description: Short literal that denotes status of called transaction.
        type: string
    type: object
  validate-transaction-command:
    description: Command for validating currency-exchange transaction.
    example:
      source-account-number: 115-1000100019578-10
      destination-account-number: 115-0000000050378-56
      currency:
        code: 'EUR'
        amount: 100
      contact-person:
        first-name: ''
        last-name: ''
        email: ''
        fax-number: ''
        phone-number: ''
      direction: purchase
      category: House equipment.
      offer-id: 0
      transaction-id: '99923456786001'
    properties:
      source-account-number:
        description: Source account number.
        type: string
      destination-account-number:
        description: Destination account number.
        type: string
      currency:
        description: Currency amount.
        $ref: '#/definitions/currency'
      contact-person:
        description: Contact person.
        $ref: '#/definitions/contact-person'
      direction:
        description: 'Direction (purchase, sell).'
        enum:
          - purchase
          - sell
        type: string
      category:
        description: Category
        type: string
      offer-id:
        description: Offer id
        format: int32
        type: integer
      transaction-id:
        description: Transaction identifier.
        type: string
    required:
      - source-account-number
      - destination-account-number
      - currency
      - contact-person
      - direction
      - category
      - transaction-id
    type: object
  paged-list:
    description: List with support for paging
    properties:  
      total-count:
        description: Total number of items in collection
        type: integer
      page-size:
        description: Size of the page
        type: integer
      page:
        description: Index of current page
        type: integer
      total-pages:
        description: Total number of pages of set size
        type: integer
      sort-order:
        description: Sort order (`asc` or `desc`). Default is asc
        type: string
        enum:
        - asc
        - desc
      sort-by:  
        description: Attribute of the collection item to sort by
        type: string
    type: object
  validation-problem:
    description: Got when request that is sent have some errors.
    example:
      error: entry-parameters-not-valid
      message: Parameters You have entered are not valid.
    properties:
      error:
        description: Error literal.
        type: string
      message:
        description: Displayed message.
        type: string
    type: object
  business-problem:
    description: When request is well formed but some business policy doesn't allow it to be executed, busieness-problem describes taht situation.
    example:
      type: Business problem.
      title: Night exchange is closed.
      details: The transactions of exchange for this night are closed. 
    properties:
      type:
        description: Type of error that is clasified as business policy violation problem.
        type: string
      title:
        description: Short description.
        type: string
      details:
        description: Detailed description of particular problem.
        type: string
    type: object
responses:
#   resource-created-response:
#     description: Resource was created successfuly.
#     schema:
#       $ref: "#/definitions/command-result"
#   validation-problem-response:
#     description: Your request was not constructed properly. Response contains the list of validation errors for each invalid element of your request. For complete list of possible validation errors see [validation errors]() classification.
#     schema: 
#       $ref: '#/definitions/validation-problem'
  default-error-response:
    description: Besides specific status codes above, other standard http [status codes](http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html) can be returned for each request. To learn more see general guidance on [error handling]()
schemes:
  - http
