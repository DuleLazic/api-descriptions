swagger: '2.0'
host: api.asee.com
basePath: /user-management
info:
  description: |
    User Management API manages customers credentials and others properties related to the users.
    This includes setting and changing password and username, manage external login and others users properties such as phone number and email.
  title: User Management
  version: beta
tags:
  - description: Working with external authentication providers
    name: Login providers
  - description: Working with credentials
    name: Credentials
  - description: Working with hint pictures
    name: Hint pictures
  - description: Working with security questions
    name: Security questions
  - description: Working with users
    name: Users
consumes:
  - application/json
produces:
  - application/json
paths:
  /users/external-login/{provider}:
    delete:
      description: Disables external authentication provider for the user.
      operationId: Users_RemoveLoginProvider
      parameters:
        - description: Identifier of authentication provider.
          in: path
          name: provider
          required: true
          type: string
      responses:
        '204':
          description: No content
      summary: Removes existing login provider for the user.
      tags:
        - Login providers
      x-asee-tags: []
  /users/external-login:
    post:
      description: Registers external authentication provider for the user.
      operationId: Users_RegisterLoginProvider
      parameters:
        - description: Command contains parameters for adding new authentication provider.
          in: body
          name: cmd
          required: true
          schema:
            $ref: '#/definitions/register-external-login-provider-command'
      responses:
        '204':
          description: No content
      summary: Adds new login provider for the user.
      tags:
        - Login providers
      x-asee-tags: []
  /users/password:
    post:
      description: Allows user to initially set new or change existing password.
      operationId: Users_ChangePassword
      parameters:
        - description: Command contains parameters for setting new password.
          in: body
          name: cmd
          required: true
          schema:
            $ref: '#/definitions/change-password-command'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/command-result'
        default:
          $ref: '#/responses/default-error-response'
      summary: Sets new password for the user.
      tags:
        - Credentials
      x-asee-tags: []
  /users/password/reset:
    post:
      description: Resets user password by randomly generating new one. Commonly used when user has forgotten previous one.
      operationId: Users_ResetPassword
      parameters:
        - description: Command contains parameters for reset of password.
          in: body
          name: cmd
          required: true
          schema:
            $ref: '#/definitions/reset-password-command'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/command-result'
        default:
          $ref: '#/responses/default-error-response'
      summary: "Resets user's password."
      tags:
        - Credentials
      x-asee-tags: []
  /users/username:
    post:
      description: Sets new or replaces existing username for the user. Username must be unique.
      operationId: Users_ChangeUsername
      parameters:
        - description: Command contains parameters for change of username.
          in: body
          name: cmd
          required: true
          schema:
            $ref: '#/definitions/change-username-command'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/command-result'
        default:
          $ref: '#/responses/default-error-response'
      summary: Sets new username for the user.
      tags:
        - Credentials
      x-asee-tags: []
  /users/email:
    post:
      description: Sets new or changes exising email in user profile. This email is used for additional user authentication.
      operationId: Users_ChangeEmail
      parameters:
        - description: Command contains parameters for changing email.
          in: body
          name: cmd
          required: true
          schema:
            $ref: '#/definitions/change-email-command'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/command-result'
        default:
          $ref: '#/responses/default-error-response'
      summary: "Setting or changing user's email address."
      tags:
        - Credentials
      x-asee-tags: []
  '/users/{username}/hint-picture':
    get:
      description: "Gets the user's hint picture. Hint picture is used in login process as security measure against phishing attacks."
      operationId: Users_GetHintPicture
      parameters:
        - $ref: '#/parameters/username-param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/hint-picture'
        default:
          $ref: '#/responses/default-error-response'
      summary: "Gets user's hint picture."
      tags:
        - Hint pictures
      x-asee-tags: []
    post:
      description: "Sets the hint picture for the user. Hint picture is used in login process as security measure against phishing attacks."
      operationId: Users_UpdateHintPicture
      parameters:
        - description: Command contains parameters for setting hint picture.
          in: body
          name: cmd
          required: true
          schema:
            $ref: '#/definitions/set-hint-picture-command'
        - $ref: '#/parameters/username-param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/command-result'
        default:
          $ref: '#/responses/default-error-response'
      summary: "Sets user's hint picture."
      tags:
        - Hint pictures
      x-asee-tags: []
  '/users/{username}/security-questions':
    get:
      description: Gets the security questions which user has selected to be used for identification and password change in case of forgotten password.
      operationId: Users_GetSecurityQuestions
      parameters:
        - $ref: '#/parameters/username-param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/security-question-list'
        default:
          $ref: '#/responses/default-error-response'
      summary: Gets security questions.
      tags:
        - Security questions
      x-asee-tags: []
  '/users/{username}/security-questions/validate':
    post:
      description: Checks if the answers that user has provided on security questions are valid.
      operationId: Users_ValidateSecurityQuestions
      parameters:
        - description: Security questions answers command
          in: body
          name: cmd
          required: true
          schema:
            $ref: '#/definitions/validate-security-questions-command'
        - $ref: '#/parameters/username-param'
      responses:
        '200':
          x-asee-compliance: It is not good that this operation is returning validation status in form of success-failure through the object. It would be better if 200 OK is returned if answers are valid, and that 401 (or 440) is returned in case that answers are not valid.
          description: OK
          schema:
            $ref: '#/definitions/security-questions-validation-status'
        default:
          $ref: '#/responses/default-error-response'
      summary: Validates answers on security questions.
      tags:
        - Security questions
      x-asee-tags: []
  /users:
    post:
      description: Registers new user profile with corresponding credentials.
      operationId: Users_Create
      parameters:
        - description: The create identity command.
          in: body
          name: cmd
          required: true
          schema:
            $ref: '#/definitions/create-user-command'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/command-result'
        default:
          $ref: '#/responses/default-error-response'
      summary: Creates new user.
      tags:
        - Users
      x-asee-tags: []
  '/users/{username}':
    get:
      description: Retrieves user profile information.
      operationId: Users_Get
      parameters:
        - $ref: '#/parameters/username-param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/user'
        default:
          $ref: '#/responses/default-error-response'
      summary: Get basic information about user.
      tags:
        - Users
      x-asee-tags: []
parameters:
  username-param:
    description: The username. Username is unique identifier.
    in: path
    name: username
    required: true
    type: string
definitions:
  register-external-login-provider-command:
    description: Contains parameters for adding new external login provider.
    example:
      code: FB123456
      provider: Facebook
      redirect-uri: https://api.asse.com/external-login
    properties:
      code:
        description: Authentication code for third party provider.
        type: string
      provider:
        description: Name of the third party login provider.
        type: string
      redirect-uri:
        description: Uri of the third party login provider.
        type: string
    required:
      - code
      - provider
    type: object
  change-password-command:
    description: Contains parameters for changing user's password.
    example:
      old-password: Test.User.1
      new-password: Test.User.2
    properties:
      old-password:
        description: Old password.
        type: string
      new-password:
        description: New password.
        type: string
    required:
      - old-password
      - new-password
    type: object
  command-result:
    description: Command result provides status of operation and identifier of the record.
    example:
      id: 123456
      created-record-status: CreatedRecordStatus
    properties:
      id:
        description: Id of created, updated or deleted entity.
        type: string
      resource-status:
        description: The created, updated, deleted record status.
        type: string
    type: object
  reset-password-command:
    description: Contains parameters for reset of user's password.
    example:
      username: test.user
      new-password: Test.User.2
    properties:
      username:
        x-asee-compliance: Do we need this property here or should it be part of the operation path?
        description: Username.
        type: string
      new-password:
        x-asee-compliance: This property is awkward too and should be removed. The method should generate new password, it should not be input parameter.
        description: New password.
        type: string
    required:
      - username
      - new-password
    type: object
  change-username-command:
    description: Contains parameters for changing username.
    example:
      username: test.user
    properties:
      username:
        description: Username.
        type: string
    required:
      - username
    type: object
  change-email-command:
    description: Contains parameters for changing email address.
    example:
      email: test.user@asse.com
    properties:
      email:
        description: Username.
        type: string
    required:
      - email
    type: object
  hint-picture:
    description: Details of hint picture used for login process.
    example:
      file-name: Picture1.jpg
      uri: https://api.asee.com
    properties:
      file-name:
        description: Hint picture file name.
        type: string
      uri:
        description: URI of the hint picture.
        type: string
      status:
        x-asee-compliance: This should be related to enum.
        description: Hint picture status.
        type: string
    type: object
  set-hint-picture-command:
    description: Contains parameters for setting new hint picture for the client.
    example:
      uri: https://api.asee.com/Picture1.jpg
    properties:
      uri:
        description: URI of the hint picture.
        type: string
    type: object
  security-question-list:
    description: Security questions
    example:
      customer-number: 2012034
    properties:
      customer-number:
        description: Unique customer identifier.
        type: string
      questions:
        description: List of security questions.
        items:
          $ref: '#/definitions/security-question'
        type: array
    type: object
  security-question:
    description: 'Security question'
    example:
      question-id: QuestionId
      question: Question
      description: Description
      answer-format-type: AnswerFormatType
      answer-format: AnswerFormat
      available-answers:
        - value: Value
          text: Text
    properties:
      question-id:
        description: Question identifier.
        type: string
      question:
        description: Question.
        type: string
      description:
        description: Description.
        type: string
      answer-format-type:
        x-asee-compliance: This property should be related to enumeration.
        description: Type of the answer format.
        type: string
      answer-format:
        x-asee-compliance: Is this also related to some enum?
        description: Answer format.
        type: string
      available-answers:
        description: List of possible values for the answers.
        items:
          $ref: '#/definitions/available-answer'
        type: array
    type: object
  available-answer:
    description: Possible value for the answer.
    example:
      value: Value
      text: Text
    properties:
      value:
        description: Answer value.
        type: string
      text:
        description: Answer text.
        type: string
    type: object
  validate-security-questions-command:
    description: Contains list of answers to security questions that should be validated.
    example:
      username: test.user
    properties:
      answers:
        description: List of answers on security questions
        items:
          $ref: '#/definitions/security-answer'
        type: array
    type: object
  security-answer:
    description: Answer to security question.
    example:
      question-id: 75
      answer: Blue
    properties:
      question-id:
        description: Question identifier.
        type: string
      answer:
        description: Answer to security question.
        type: string
    type: object
  security-questions-validation-status:
    description: Indicates whether the provided answers to security questions have been successfully validated.
    example:
      customer-id: 2012034
      status: success
    properties:
      customer-number:
        description: Customer identifier is returned in case that validation was successful.
        type: string
      status:
        description: Provides information whether the validation of security questions was successful or not.
        enum:
          - success
          - failure
        type: string
    type: object
  create-user-command:
    description: Contains parameters for creating new user.
    example:
      customer-number: 2012034
      first-name: Test User
      last-name: Test
      username: test.user
      password: Test.Password
      email: test.user@asse.com
      phone-number: 0569963512
      hint-picture: picture1.jpg
    properties:
      customer-number:
        description: Unique customer identifier. Used for registering user who is already customer of the bank.
        type: string
      first-name:
        description: User's first name.
        type: string
      last-name:
        description: User's last name.
        type: string
      username:
        description: Username chosen by the user.
        type: string
      password:
        description: Password chosen by the user.
        type: string
      email:
        description: User's e-mail address.
        type: string
      phone-number:
        description: User's mobile phone number (capable of receiving SMS).
        type: string
      hint-picture:
        description: Image that user has chosen to be used in login process as security measure against phishing attacks.
        type: string
    required:
      - username
      - password
      - email
      - phone-number
    type: object
  user:
    description: Provides user information.
    example:
      last-login-on: '2016-01-01T00:00:00'
      name: TestUser
      customer-id: 2012034
      email: testuser@asee.com
      phone-number: 0569963512
      external-login-providers:
        - facebook
      status: active
    properties:
      last-login-on:
        description: Last login on.
        format: date-time
        type: string
      first-name:
        description: User's first name.
        type: string
      last-name:
        description: User's last name.
        type: string
      customer-number:
        description: Unique customer identifier. Value is set if the user is already customer of the bank.
        type: string
      email:
        description: Email address.
        type: string
      phone-number:
        description: Phone number.
        type: string
      external-login-providers:
        description: External login providers.
        items:
          type: string
        type: array
      status:
        description: Status.
        enum:
          - active
          - locked
          - email-not-confirmed
          - phone-number-not-confirmed
        type: string
    type: object
responses:
  default-error-response:
    description: 'Besides specific status codes above, other standard http [status codes](http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html) can be returned for each request. To learn more see general guidance on [error handling]()'
schemes:
  - http
